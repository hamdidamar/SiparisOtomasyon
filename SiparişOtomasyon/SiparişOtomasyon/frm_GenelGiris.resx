<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        hCFFf//Z
</value>
  </data>
</root>